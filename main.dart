import 'dart:ffi';
import 'dart:html';

import 'package:flutter/material.dart';
import 'package:macdemo/main.dart';
//import 'package:randomizer/randomizer.dart';
import 'dart:math';
import 'package:math_utils/math_utils.dart';
import 'play.dart';
import 'package:provider/provider.dart';

//use this page to start the game with a 'play' button
//which also generates a random number that
//the user is attempting to guessCount

void main() {
  runApp(MyApp());
}

// use main for InheritedWidget and main build - move play game and new game classes/methods to separate pages
/*

class NewRanNum
 extends InheritedWidget {
  
const NewRanNum
({Key? key, required this.ranNmbr, required Widget child}) : super(key: key, child: child); 
final NewRanNum
 ranNmbr;



static NewRanNum
? of(BuildContext context){
  final NewRanNum
  ? result = context.dependOnInheritedWidgetOfExactType<NewRanNum
  >();
  assert(result!=null, 'No number generated'); //assert is t or f; boolean
  return result;
}

@override
bool updateShouldNotify(NewRanNum
 old) => ranNmbr != old.ranNmbr;
}

*/

//declared and initialized _numbr

class MyApp extends StatelessWidget {
  MyApp({Key? key}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'MacDemo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class generatRandomWidget extends StatefulWidget {
  
  final Widget child;

  generatRandomWidget({Key? key, required this.child}) : assert(child!=null), super(key: key);
  
  @override
  _generatRandomWidgetState createState() => _generatRandomWidgetState();
}

class _generatRandomWidgetState extends State<generatRandomWidget> {
 late int randomN;

 @override 
 void initstate() {
    super.initState();
    randomN = Random(1).nextInt(100);
 }
  @override
  Widget build(BuildContext context) {
    return Container(
    );
  }
}

class NumberModel extends InheritedWidget  {
final int randomN;
final Widget child;

  @required this.randomN,
  @required  Widget child;}):  super(child: child);

  NumberModel(
    this.child, {
      Key? key,
      required this.randomN,
    });

@override 
bool updateShouldNotify(NumberModel old) {
    return randomN != old.randomN;
}

@override 
bool updateShouldNotifyDependent(NumberModel old,) {
   return (
     assert (randomN !=null) && (old.randomN != randomN); 
  

}


    }


  @override
  Widget build(BuildContext context) {
    return Container(
      
    );
  }
}

//class to generate the random number
class RanNmbr extends StatefulWidget {
  RanNmbr({Key? key}) : super(key: key);

  //Random random = Random();
  int numbr = Random(1).nextInt(100);
  //int numbr = 0;

  @override
  _RanNmbrState createState() => _RanNmbrState();

  //nextInt(int i) {}
}

class _RanNmbrState extends State<RanNmbr> {
  final random = Random();
  late int numbr;

  // _RanNmbrState();

  void randomNum() {
    setState(() {
      numbr = Random(1).nextInt(100);
      //numbr;
      // print(numbr);
    });
  }

  @override
  Widget build(BuildContext context) {
    //return Container();
    return Container();
  }
}

class FirstClass extends StatefulWidget {
  @override
  _FirstClassState createState() => _FirstClassState(
        rNu: Random(1).nextInt(100),
      );
}

class _FirstClassState extends State<FirstClass> {
  final random =
      Random(); //creted var 'random' and assigned to the dart random method
  int rNu; //create integer to hold value of random number generated by random var above

  _FirstClassState({required this.rNu}); //initialzed var rNu

  @override
  Widget build(BuildContext context) {
    //created a default build method for this class
    return Container();
  }
}

class SecondClass extends StatefulWidget {
  //created second class that is used to share value generated in 1sclass

  final int rNu; //creatd var to store random # value

  SecondClass(
      {required this.rNu}); //initialized rNu var and made it a requirement

  @override
  _SecondClassState createState() => _SecondClassState();
}

class _SecondClassState extends State<SecondClass> {
  @override
  Widget build(BuildContext context) {
    //created build method for 2nc class
    return Container(child: Center(child: Text('${widget.rNu})')));
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key? key}) : super(key: key);

  //get RanNmbr => null;

  //final String title;

  @override
  State<MyHomePage> createState() => MyHomePageState();
}

class MyHomePageState extends State<MyHomePage> {
  int? guessCount = 0;
  //int? numbr = 0;
  late final FirstClass firstclass; 
  //final rNu = firstclass.rNu;//you can't call a var the same way you do w/ a method or construct the same way
  
//step 1 create texteditingcontroller to store user input string
  final myController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Colors.green[800],
          title: const Text('Guess The Number'),
        ),
        backgroundColor: Colors.lightGreen[100],
        // theme: Theme(data: data, child: child)
        body: Center(child: SecondClass(rNu: Text('${widget.rNu})',);
        /*
        Center(
            child: Container(
                child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
              Padding(
                padding: EdgeInsets.all(16.0),
              ),
              // Text(
              //   '$numbr'), //display the random number generated after pressing the floating action button
//
              SizedBox(
                height: 150,
                width: 250,
              ),
              Text('Press Play to Start'),
              Icon(
                Icons.question_mark_outlined,
                color: Colors.white,
                size: 100,
              ),
              FloatingActionButton(
                backgroundColor: Colors.green,
                heroTag: 'Press Start',
                onPressed: () => [
                  Text('${widget.rNu})'),
                  RanNmbr,
                  Navigator.push(
                      context, MaterialPageRoute(builder: (_) => MyGamePage())),
                  // Text('$numbr'),
                ],
                //when user presses button, _randomNum method is executed to generate a random number (check dart math)
                child: Icon(
                  Icons.play_arrow,
                  size: 50,
                ),
              ),
            ])
            )
            )
            */
            );
  }
}
